## load heritage Chinese on Chinese critical trials
hcc = read.csv("hcc-OE-trials.csv",header=T)
head(hcc)
hcc$chinese = 1
hcc$subexpt = "hcc"
## load heritage Chinese on English critical trials
hce = read.csv("hce-OE-trials.csv",header=T)
head(hce)
hce$chinese = 1
hce <- hce[hce$subexpt=="plain",]
hce$subexpt <- "hce"
e_trim = subset(e,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
c_trim = subset(c,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
hcc_trim = subset(hcc,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
hce_trim = subset(hce,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
## comparing native English and native Chinese
d = rbind(e_trim,c_trim,hcc_trim,hce_trim)
head(d)
summary(d)
d_s = bootsSummary(data=d, measurevar="response1", groupvars=c("ORDER","INVERSE","subexpt"))
d_s$subexpt <- factor(d_s$subexpt,levels=c("Native English","Native Mandarin","hcc","hce"))
d_s$subexpt <- factor(d_s$subexpt,labels=c("Native English","Native Mandarin","Heritage Mandarin\non Mandarin","Heritage Mandarin\non English"))
plot <- ggplot(d_s, aes(x=subexpt,y=response1,fill=factor(INVERSE,labels=c("surface","inverse")))) +
geom_bar(stat="identity",position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=subexpt, width=0.1),position=position_dodge(width=0.9))+
ylab("rating (out of 7) \n")+
scale_y_continuous(limits=c(1,7),oob = rescale_none)+
geom_text(aes(y=(bootsci_low-.3),label=round(response1,2)),position=position_dodge(width=0.9))+
#scale_y_continuous(limits=c(1,7),rescale_none)+
#scale_y_continuous(limits=c(1,5),oob = rescale_none)+
#ylim(0,7)+
xlab("\n experiment") +
labs(fill="interpretation")+
theme_bw() +
scale_fill_manual(values=c("darkgrey", "lightgrey"))+
theme(panel.background = element_rect(fill = 'white',color ='black'))
#facet_wrap( ~ subexpt)
plot
library(ggplot2)
library(scales)
setwd("~/Dropbox/MashaLab/Quantifier Scope/Papers/Glossa SI/Analysis/")
source("helpers.R")
## Heritage chinese on English
hce = read.csv("heritage_chinese_on_english.csv",header=T)
hce2 = read.csv("~/Dropbox/MashaLab/Quantifier Scope/Papers/Glossa SI/Analysis/hce2.csv",header=T)
head(hce)
head(hce2)
d1 = subset(hce, select=c("IP","condition","experimentName","item","response1","response1_time","trialnumber","userCode","sound1","ORDER","INVERSE","THEREBE","ONE"))
d2 = subset(hce2, select=c("IP","condition","experimentName","item","response1","response1_time","trialnumber","userCode","sound1","ORDER","INVERSE","THEREBE","ONE"))
d = rbind(d1,d2)
# English condition names
d$OEINV = 0
d[d$ORDER=="OE"&d$INVERSE==1,]$OEINV = 1
d$plain = 0
d[d$THEREBE!="yes" & d$ONE!=1,]$plain = 1
d$one = 0
d[d$THEREBE!="yes" & d$ONE==1,]$one = 1
d$there = 0
d[d$THEREBE=="yes" & d$ONE==0,]$there = 1
d$thereone = 0
d[d$THEREBE=="yes" & d$ONE==1,]$thereone = 1
plain = d[d$plain==1,]
one = d[d$one==1,]
there = d[d$there==1,]
thereone = d[d$thereone==1,]
d$subexpt = NA
d[d$plain==1,]$subexpt = "plain"
d[d$one==1,]$subexpt = "one"
d[d$there==1,]$subexpt = "there"
d[d$thereone==1,]$subexpt = "thereone"
head(d)
#write.csv(d,"hce-critical-trials-2.csv")
d$workerID <- d$IP
critical_trials <- d[d$ORDER=="OE",]
head(critical_trials)
write.csv(critical_trials,"~/Dropbox/MashaLab/Quantifier Scope/Papers/Lingua SI/Analysis/hce-OE-trials.csv")
write.csv(critical_trials,"~/Dropbox/MashaLab/Quantifier Scope/Papers/Glossa SI/Analysis/hce-OE-trials.csv")
library(ggplot2)
library(scales)
setwd("~/Dropbox/MashaLab/Quantifier Scope/Papers/Lingua SI/Analysis/")
source("helpers.R")
library(lme4)
library(lmerTest)
## Heritage chinese on Chinese
hcc = read.csv("heritage_chinese_on_chinese_2.csv",header=T)
library(ggplot2)
library(scales)
setwd("~/Dropbox/MashaLab/Quantifier Scope/Papers/Glossa SI/Analysis/")
source("helpers.R")
library(lme4)
library(lmerTest)
## Heritage chinese on Chinese
hcc = read.csv("heritage_chinese_on_chinese_2.csv",header=T)
critical_trials <- hcc[hcc$ORDER=="OE",]
head(critical_trials)
write.csv(critical_trials,"~/Dropbox/MashaLab/Quantifier Scope/Papers/Lingua SI/Analysis/hcc-OE-trials.csv")
write.csv(critical_trials,"~/Dropbox/MashaLab/Quantifier Scope/Papers/Glossa SI/Analysis/hcc-OE-trials.csv")
library(scales)
setwd("~/Dropbox/MashaLab/Quantifier Scope/Papers/Lingua SI/Analysis/")
## load English critical trials
e = read.csv("english-OE-trials.csv",header=T)
head(e)
e = e[e$subexpt=="plain",]
e$subexpt = "Native English"
## load Chinese critical trials
c = read.csv("chinese-OE-trials.csv",header=T)
head(c)
c$chinese = 1
c$subexpt = "Native Mandarin"
## load heritage Chinese on Chinese critical trials
hcc = read.csv("hcc-OE-trials.csv",header=T)
head(hcc)
hcc$chinese = 1
hcc$subexpt = "hcc"
## load heritage Chinese on English critical trials
hce = read.csv("hce-OE-trials.csv",header=T)
head(hce)
hce$chinese = 1
hce <- hce[hce$subexpt=="plain",]
hce$subexpt <- "hce"
e_trim = subset(e,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
c_trim = subset(c,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
hcc_trim = subset(hcc,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
hce_trim = subset(hce,select=c("workerID","experimentName","response1","trialnumber","item","chinese","subexpt","ORDER","INVERSE"))
## comparing native English and native Chinese
d = rbind(e_trim,c_trim,hcc_trim,hce_trim)
head(d)
summary(d)
d_s = bootsSummary(data=d, measurevar="response1", groupvars=c("ORDER","INVERSE","subexpt"))
d_s$subexpt <- factor(d_s$subexpt,levels=c("Native English","Native Mandarin","hcc","hce"))
d_s$subexpt <- factor(d_s$subexpt,labels=c("Native English","Native Mandarin","Heritage Mandarin\non Mandarin","Heritage Mandarin\non English"))
plot <- ggplot(d_s, aes(x=subexpt,y=response1,fill=factor(INVERSE,labels=c("surface","inverse")))) +
geom_bar(stat="identity",position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=subexpt, width=0.1),position=position_dodge(width=0.9))+
ylab("rating (out of 7) \n")+
scale_y_continuous(limits=c(1,7),oob = rescale_none)+
geom_text(aes(y=(bootsci_low-.3),label=round(response1,2)),position=position_dodge(width=0.9))+
#scale_y_continuous(limits=c(1,7),rescale_none)+
#scale_y_continuous(limits=c(1,5),oob = rescale_none)+
#ylim(0,7)+
xlab("\n experiment") +
labs(fill="interpretation")+
theme_bw() +
scale_fill_manual(values=c("darkgrey", "lightgrey"))+
theme(panel.background = element_rect(fill = 'white',color ='black'))
#facet_wrap( ~ subexpt)
plot
plot <- ggplot(d_s, aes(x=subexpt,y=response1,fill=factor(INVERSE,labels=c("surface","inverse")))) +
geom_bar(stat="identity",position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=subexpt, width=0.1),position=position_dodge(width=0.9))+
ylab("rating (out of 7) \n")+
scale_y_continuous(limits=c(1,7),oob = rescale_none)+
geom_text(aes(y=(bootsci_low-.3),label=round(response1,1)),position=position_dodge(width=0.9))+
#scale_y_continuous(limits=c(1,7),rescale_none)+
#scale_y_continuous(limits=c(1,5),oob = rescale_none)+
#ylim(0,7)+
xlab("\n experiment") +
labs(fill="interpretation")+
theme_bw() +
scale_fill_manual(values=c("darkgrey", "lightgrey"))+
theme(panel.background = element_rect(fill = 'white',color ='black'))
#facet_wrap( ~ subexpt)
plot
ggsave("ZAS_scope_plot.pdf",width=8,height=4)
library(ggplot2)
library(languageR)
data(lexdec)
head(lexdec)
theme_set(theme_bw())
setwd("~/git/tutorials/ggplot2/")
ggplot(lexdec, aes(x=RT))
ggplot(lexdec, aes(x=RT)) +
geom_histogram()
ggplot(lexdec, aes(x=RT)) +
geom_histogram() +
xlab("Log-transformed lexical decision times") +
ylab("Number of observations")
ggplot(lexdec, aes(x=RT)) +
geom_histogram(binwidth=0.01) +
xlab("Log-transformed lexical decision times") +
ylab("Number of observations")
ggsave("plots/rt_histogram.png",width=5,height=4)
ggplot(lexdec, aes(x=Frequency, y=RT))
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point(color="red",size=5,shape=8,alpha=0.1) +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point(color="red",size=5,shape=8,alpha=0.25) +
geom_smooth(method="lm") +
xlim(c(2,3)) +
ylim(c(6,6.5)) +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT, color=Length)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
labs(color="Word length\nin characters")
ggplot(lexdec, aes(x=Frequency, y=RT, color=as.factor(Length))) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
labs(color="Word length\nin characters")
ggplot(lexdec, aes(x=Frequency, y=RT, color=as.factor(Length), shape=Class)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
labs(color="Word length\nin characters", shape="Word class")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Class~Length)
ggplot(lexdec, aes(x=Frequency, y=RT, color=NativeLanguage)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Class~Length)
ggplot(lexdec, aes(x=Frequency, y=RT, color=NativeLanguage)) +
geom_point(alpha=0.25) +
geom_smooth(method="lm") +
scale_color_manual(values=c("blue","red")) +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Class~Length)
source("helpers.R")
d_s = bootsSummary(data=lexdec, measurevar="RT", groupvars=c("Length"))
d_s
ggplot(d_s,aes(x=Length,y=RT))+
geom_bar(stat="identity")
ggplot(d_s,aes(x=Length,y=RT))+
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=Length))
ggplot(d_s,aes(x=as.factor(Length),y=RT))+
geom_bar(stat="identity",fill="lightgray",color="darkgray") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=as.factor(Length), width=0.25)) +
coord_cartesian(ylim=c(6,7)) +
xlab("Word length in characters") +
ylab("Log-transformed response time")
d_s2 = bootsSummary(data=lexdec, measurevar="RT", groupvars=c("Length","Class","NativeLanguage"))
head(d_s2)
ggplot(d_s2,aes(x=as.factor(Length),y=RT,fill=NativeLanguage))+
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=as.factor(Length), width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(6,7)) +
xlab("Word length in characters") +
ylab("Log-transformed response time") +
facet_grid(Class~.)
ggplot(d_s2,aes(x=as.factor(Length),y=RT,fill=NativeLanguage))+
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=as.factor(Length), width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(6,7)) +
scale_fill_manual(values=c("blue","red")) +
xlab("Word length in characters") +
ylab("Log-transformed response time") +
facet_grid(Class~.)
d_s3 = bootsSummary(data=lexdec, measurevar="RT", groupvars=c("NativeLanguage"))
head(d_s3)
ggplot(d_s3,aes(x=NativeLanguage,y=RT))+
geom_bar(stat="identity", position=position_dodge(), fill="lightgray",color="darkgray") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(5,8)) +
xlab("Native Langauge") +
ylab("Log-transformed response time")
ggplot(d_s3,aes(x=NativeLanguage,y=RT))+
geom_bar(stat="identity", position=position_dodge(), fill="lightgray",color="darkgray") +
geom_jitter(data=lexdec,aes(y=RT),alpha=.25,color="red") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(5,8)) +
xlab("Native Langauge") +
ylab("Log-transformed response time")
ggplot(lexdec,aes(x=RT))+
geom_density()
ggplot(lexdec,aes(x=RT,fill=NativeLanguage))+
geom_density(alpha=0.5)
ggplot(lexdec,aes(y=RT,x=NativeLanguage))+
geom_violin()
ggplot(lexdec,aes(y=RT,x=NativeLanguage))+
geom_violin() +
geom_boxplot(notch=T,width=.25)
ggplot(lexdec,aes(y=RT,x=NativeLanguage))+
geom_violin() +
geom_point(data=d_s3,aes(y=RT,x=NativeLanguage),shape=95,size=5) +
geom_errorbar(data=d_s3,aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25))
ggplot(lexdec,aes(y=RT,x=NativeLanguage,fill=NativeLanguage))+
geom_violin() +
geom_point(data=d_s3,aes(y=RT,x=NativeLanguage),shape=95,size=5,color="white") +
geom_errorbar(data=d_s3,aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25),color="white") +
scale_fill_manual(values=c("blue","red")) +
xlab("Native Language") +
ylab("Log-transformed response time") +
guides(fill=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
library(languageR)
data(lexdec)
head(lexdec)
head(lexdec)
nrow(lexdec)
theme_set(theme_bw())
setwd("~/git/tutorials/ggplot2/")
setwd("~/")
setwd("~/git/tutorials/ggplot2")
ggplot(lexdec, aes(x=RT))
head(lexdec)
ggplot(lexdec, aes(x=RT)) +
geom_histogram()
ggplot(lexdec, aes(x=RT)) +
geom_histogram() +
xlab("Log-transformed lexical decision times") +
ylab("Number of observations")
ggplot(lexdec, aes(x=RT)) +
geom_histogram(binwidth=0.01) +
xlab("Log-transformed lexical decision times") +
ylab("Number of observations")
ggplot(lexdec, aes(x=RT)) +
geom_histogram(binwidth=0.01) +
xlab("Log-transformed lexical decision times") +
ylab("Number of observations")
ggsave("plots/rt_histogram.png",width=5,height=4)
ggsave("plots/rt_histogram.png",width=2.5,height=2)
ggplot(lexdec, aes(x=RT)) +
geom_histogram(binwidth=0.01) +
xlab("Log-transformed lexical decision times") +
ylab("Number of observations")
ggplot(lexdec, aes(x=Frequency, y=RT))
ggplot(lexdec, aes(x=Frequency, y=RT))
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
geom_smooth() +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point(color="red",size=5,shape=8,alpha=0.1) +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point(color="red",size=5,shape=8,alpha=0.25) +
geom_smooth(method="lm") +
xlim(c(2,3)) +
ylim(c(6,6.5)) +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time")
head(lexdec)
ggplot(lexdec, aes(x=Frequency, y=RT, color=Length)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
labs(color="Word length\nin characters")
str(lexdec)
ggplot(lexdec, aes(x=Frequency, y=RT, color=as.factor(Length))) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
labs(color="Word length\nin characters")
ggplot(lexdec, aes(x=Frequency, y=RT, color=as.factor(Length), shape=Class)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
labs(color="Word length\nin characters", shape="Word class")
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Class~Length)
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Length~Class)
ggplot(lexdec, aes(x=Frequency, y=RT)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Class~Length)
ggplot(lexdec, aes(x=Frequency, y=RT, color=NativeLanguage)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Class~Length)
ggplot(lexdec, aes(x=Frequency, y=RT, color=NativeLanguage)) +
geom_point(alpha=0.25) +
geom_smooth(method="lm") +
scale_color_manual(values=c("blue","red")) +
xlab("Log-transformed lemma frequency") +
ylab("Log-transformed response time") +
facet_grid(Class~Length)
source("helpers.R")
d_s = bootsSummary(data=lexdec, measurevar="RT", groupvars=c("Length"))
d_s
ggplot(d_s,aes(x=Length,y=RT))+
geom_bar(stat="identity")
ggplot(d_s,aes(x=Length,y=RT))+
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=Length))
ggplot(d_s,aes(x=as.factor(Length),y=RT))+
geom_bar(stat="identity",fill="lightgray",color="darkgray") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=as.factor(Length), width=0.25)) +
coord_cartesian(ylim=c(6,7)) +
xlab("Word length in characters") +
ylab("Log-transformed response time")
d_s2 = bootsSummary(data=lexdec, measurevar="RT", groupvars=c("Length","Class","NativeLanguage"))
head(d_s2)
ggplot(d_s2,aes(x=as.factor(Length),y=RT,fill=NativeLanguage))+
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=as.factor(Length), width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(6,7)) +
xlab("Word length in characters") +
ylab("Log-transformed response time") +
facet_grid(Class~.)
ggplot(d_s2,aes(x=as.factor(Length),y=RT,fill=NativeLanguage))+
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=as.factor(Length), width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(6,7)) +
xlab("Word length in characters") +
ylab("Log-transformed response time") +
facet_grid(.~Class)
ggplot(d_s2,aes(x=as.factor(Length),y=RT,fill=NativeLanguage))+
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=as.factor(Length), width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(6,7)) +
scale_fill_manual(values=c("blue","red")) +
xlab("Word length in characters") +
ylab("Log-transformed response time") +
facet_grid(Class~.)
d_s3 = bootsSummary(data=lexdec, measurevar="RT", groupvars=c("NativeLanguage"))
head(d_s3)
ggplot(d_s3,aes(x=NativeLanguage,y=RT))+
geom_bar(stat="identity", position=position_dodge(), fill="lightgray",color="darkgray") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(5,8)) +
xlab("Native Langauge") +
ylab("Log-transformed response time")
ggplot(d_s3,aes(x=NativeLanguage,y=RT))+
geom_bar(stat="identity", position=position_dodge(), fill="lightgray",color="darkgray") +
geom_jitter(data=lexdec,aes(y=RT),alpha=.25,color="red") +
geom_errorbar(aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25), position=position_dodge(0.9)) +
coord_cartesian(ylim=c(5,8)) +
xlab("Native Langauge") +
ylab("Log-transformed response time")
ggplot(lexdec,aes(x=RT))+
geom_density()
ggplot(lexdec,aes(x=RT,fill=NativeLanguage))+
geom_density(alpha=0.5)
ggplot(lexdec,aes(y=RT,x=NativeLanguage))+
geom_violin()
ggplot(lexdec,aes(y=RT,x=NativeLanguage))+
geom_violin() +
geom_boxplot(notch=T,width=.25)
ggplot(lexdec,aes(y=RT,x=NativeLanguage))+
geom_violin() +
geom_point(data=d_s3,aes(y=RT,x=NativeLanguage),shape=95,size=5) +
geom_errorbar(data=d_s3,aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25))
ggplot(lexdec,aes(y=RT,x=NativeLanguage,fill=NativeLanguage))+
geom_violin() +
geom_point(data=d_s3,aes(y=RT,x=NativeLanguage),shape=95,size=5,color="white") +
geom_errorbar(data=d_s3,aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25),color="white") +
scale_fill_manual(values=c("blue","red")) +
xlab("Native Language") +
ylab("Log-transformed response time") +
guides(fill=FALSE)
ggplot(lexdec,aes(y=RT,x=NativeLanguage,fill=NativeLanguage))+
geom_violin() +
geom_point(data=d_s3,aes(y=RT,x=NativeLanguage),shape=95,size=5,color="white") +
geom_errorbar(data=d_s3,aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25),color="white") +
scale_fill_manual(values=c("blue","red")) +
xlab("Native Language") +
ylab("Log-transformed response time")
#+
#guides(fill=FALSE)
ggplot(lexdec,aes(y=RT,x=NativeLanguage,fill=NativeLanguage))+
geom_violin() +
geom_point(data=d_s3,aes(y=RT,x=NativeLanguage),shape=95,size=5,color="white") +
geom_errorbar(data=d_s3,aes(ymin=bootsci_low, ymax=bootsci_high, x=NativeLanguage, width=0.25),color="white") +
scale_fill_manual(values=c("blue","red")) +
xlab("Native Language") +
ylab("Log-transformed response time") +
guides(fill=FALSE)
